import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor

API_TOKEN = os.environ.get("BOT_TOKEN")  # –±–µ—Ä–µ–º–æ —Ç–æ–∫–µ–Ω –∑ Render Environment Variable
MANAGER_ID = 123456789  # Telegram ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

def create_keyboard():
    keyboard = InlineKeyboardMarkup(row_width=5)
    keyboard.add(InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data="contact_manager"))
    hours = [f"{hour:02d}:00" for hour in range(9, 23)]
    for i in range(0, len(hours), 5):
        keyboard.row(*[InlineKeyboardButton(text=h, callback_data=h) for h in hours[i:i+5]])
    keyboard.add(InlineKeyboardButton(text="–¢–æ–ª–∫–æ –Ω–æ—á—å", callback_data="only_night"))
    return keyboard

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("–û—Ç–º–µ—á–∞–µ–º—Å—è —Å–æ —Å–∫–æ–ª—å–∫–∏ –≤ —Ä–∞–±–æ—Ç–∫–µ ‚è∞üí≤üìÜ", reply_markup=create_keyboard())

@dp.callback_query_handler(lambda c: c.data)
async def process_callback(callback_query: types.CallbackQuery):
    data = callback_query.data
    user_name = callback_query.from_user.full_name
    if data == "contact_manager":
        await bot.send_message(MANAGER_ID, f"{user_name} —Ö–æ—á–µ—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
        await callback_query.answer("–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ")
    elif data == "only_night":
        await bot.send_message(MANAGER_ID, f"{user_name} –æ—Ç–º–µ—á–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω–æ—á–Ω—É—é —Å–º–µ–Ω—É")
        await callback_query.answer("–í—ã –æ—Ç–º–µ—Ç–∏–ª–∏ –Ω–æ—á–Ω—É—é —Å–º–µ–Ω—É")
    else:
        await bot.send_message(MANAGER_ID, f"{user_name} –æ—Ç–º–µ—á–∞–µ—Ç—Å—è —Å {data}")
        await callback_query.answer(f"–í—ã –æ—Ç–º–µ—Ç–∏–ª–∏ –≤—Ä–µ–º—è: {data}")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
